{"version":3,"sources":["Modal.js","UserSearch.js","Bio.js","Repo.js","App.js","serviceWorker.js","index.js"],"names":["Modal","_ref","chartData","closeModal","_useState","useState","_useState2","Object","slicedToArray","currentPage","setCurrentPage","react_default","a","createElement","Fragment","className","index_esm","width","height","chartType","loader","data","options","chart","title","subtitle","colors","legend","position","onClick","disabled","UserSearch","searchName","handleChange","handleSubmit","onSubmit","type","name","value","onChange","placeholder","Bio","userName","userDetails","avatar_url","public_repos","blog","html_url","src","alt","href","target","rel","Repo","publicRepos","handleRepoClick","length","map","publicRepo","key","id","App","setSearchName","_useState3","_useState4","setuserName","_useState5","_useState6","invalidUser","setInvalidUser","_useState7","_useState8","setUserDetails","_useState9","_useState10","setPublicRepos","_useState11","_useState12","setChartData","_useState13","_useState14","showModal","setShowModal","asyncToGenerator","regenerator_default","mark","_callee","event","searchNameRes","publicRepoRes","wrap","_context","prev","next","preventDefault","axios","get","concat","sent","login","t0","stop","_x","apply","this","arguments","_ref2","_callee2","commitStatRes","weeklyCommits","weekCount","_loop","_context2","textContent","all","reverse","splitCommits","toConsumableArray","splice","splitChartData","forEach","push","unshift","_x2","src_UserSearch","src_Bio","src_Repo","src_Modal","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5063cf9f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"react-google-charts\";\n\nconst Modal = ({ chartData, closeModal }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const handleClose = () => {\n    setCurrentPage(0);\n    closeModal();\n  };\n\n  return (\n    <>\n      <div className=\"modal\">\n        <div className=\"modal-body\">\n          <Chart\n            width={\"350px\"}\n            height={\"300px\"}\n            chartType=\"Bar\"\n            loader={<div>Loading Chart</div>}\n            data={chartData[currentPage]}\n            options={{\n              chart: {\n                title: \"Commit Frequency\",\n                subtitle: \"Commits trend for last 52 weeks\"\n              },\n              colors: [\"#7d058d\"],\n              legend: { position: \"none\" }\n            }}\n          />\n          <div className=\"modal-actions\">\n            <div>\n              <button\n                onClick={() => setCurrentPage(currentPage - 1)}\n                disabled={currentPage === 0}\n                className=\"app-buttons modal-buttons__green\"\n              >\n                Prev\n              </button>\n              <button\n                onClick={() => setCurrentPage(currentPage + 1)}\n                disabled={currentPage === 5}\n                className=\"app-buttons modal-buttons__blue\"\n              >\n                Next\n              </button>\n            </div>\n            <button\n              onClick={handleClose}\n              className=\"app-buttons modal-buttons__red\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nconst UserSearch = ({ searchName, handleChange, handleSubmit }) => {\n  return (\n    <form className=\"app-formGroup\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={searchName}\n        onChange={handleChange}\n        placeholder=\"Search for the Username\"\n      />\n      <button\n        disabled={searchName === \"\"}\n        className=\"app-buttons formGroup__white\"\n      >\n        Submit{\" \"}\n      </button>\n    </form>\n  );\n};\n\nexport default UserSearch;\n","import React from \"react\";\n\nconst Bio = ({ userName, userDetails }) => {\n  const { avatar_url, name, public_repos, blog, html_url } = userDetails;\n\n  return (\n    <>\n      {userName && (\n        <div className=\"app-bioContainer\">\n          <img src={avatar_url} alt=\"avatar\" className=\"bio-avatar\" />\n          <div className=\"bio-body\">\n            <div className=\"bio-body__name\">{name}</div>\n            <div className={!name ? \"bio-body__name\" : \"bio-body__username\"}>\n              {userName} : {public_repos} Public Repositories\n            </div>\n            <div>\n              <a\n                href={blog}\n                className=\"bio-body__link\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Website\n              </a>\n              <a\n                href={html_url}\n                className=\"bio-body__link\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                See in GitHub\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n      {userName && public_repos === 0 && (\n        <div className=\"bio-warning text-center\">\n          No public repo found for this user !!\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\n\nconst Repo = ({ publicRepos, handleRepoClick, userName }) => (\n  <>\n    {userName && publicRepos.length !== 0 && (\n      <div>\n        <h2 className=\"text-center\">Public Repositories</h2>\n        <ul className=\"app-repoContainer\">\n          {publicRepos.map(publicRepo => (\n            <li\n              key={publicRepo.id}\n              className=\"repo-list text-center\"\n              onClick={handleRepoClick}\n            >\n              {publicRepo.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n  </>\n);\n\nexport default Repo;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Components\nimport Modal from \"./Modal\";\nimport UserSearch from \"./UserSearch\";\nimport Bio from \"./Bio\";\nimport Repo from \"./Repo\";\n\nconst App = () => {\n  const [searchName, setSearchName] = useState(\"\");\n  const [userName, setuserName] = useState(\"\");\n  const [invalidUser, setInvalidUser] = useState(false);\n  const [userDetails, setUserDetails] = useState({});\n  const [publicRepos, setPublicRepos] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleChange = event => {\n    setSearchName(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    try {\n      event.preventDefault();\n      const searchNameRes = await axios.get(\n        `https://api.github.com/users/${searchName}`\n      );\n      setInvalidUser(false);\n      setuserName(searchNameRes.data.login);\n      setUserDetails(searchNameRes.data);\n      setSearchName(\"\");\n      const publicRepoRes = await axios.get(\n        `https://api.github.com/users/${searchName}/repos`\n      );\n      setPublicRepos(publicRepoRes.data);\n    } catch (err) {\n      setInvalidUser(true);\n      setSearchName(\"\");\n    }\n  };\n\n  const handleRepoClick = async event => {\n    const commitStatRes = await axios.get(\n      `https://api.github.com/repos/${userName}/${\n        event.target.textContent\n      }/stats/participation`\n    );\n    const weeklyCommits = commitStatRes.data.all.reverse();\n    let weekCount = 1;\n    let chartData = [];\n    while (weeklyCommits.length > 0) {\n      const splitCommits = [...weeklyCommits.splice(0, 10)];\n      let splitChartData = [];\n      // eslint-disable-next-line\n      splitCommits.forEach(data => {\n        splitChartData.push([`Week ${weekCount}`, data]);\n        weekCount += 1;\n      });\n      splitChartData.unshift([\"Weeks\", \"Total Commits\"]);\n      chartData.push(splitChartData);\n    }\n    setChartData(chartData);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h2 className=\"app-title text-center\">GitHub Commits History Chart</h2>\n      <h5 className=\"app-subTitle text-center\">\n        Get weekly commit count on all public repos\n      </h5>\n      <UserSearch\n        searchName={searchName}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n      {invalidUser && (\n        <div className=\"bio-warning text-center\">\n          Please enter a valid username!!\n        </div>\n      )}\n      {!invalidUser && <Bio userName={userName} userDetails={userDetails} />}\n      {!invalidUser && (\n        <Repo\n          userName={userName}\n          publicRepos={publicRepos}\n          handleRepoClick={handleRepoClick}\n        />\n      )}\n      {showModal && <Modal chartData={chartData} closeModal={closeModal} />}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}